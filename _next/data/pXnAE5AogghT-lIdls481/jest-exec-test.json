{"pageProps":{"frontmatter":{"title":"How To Execute Node Commands To Test With Jest","meta":"This post is a quick summary of running node script execution tests with Jest.","categories":["code","typescript","javascript"],"date":"January 19, 2021","path":"/jest-exec-test"},"content":"<p>This post is a quick summary of running <a href=\"https://nodejs.org/en/\">Node</a> <a href=\"https://webplatform.github.io/docs/tutorials/your_first_look_at_javascript/#:~:text=To%20execute%20JavaScript%20in%20a,element%20with%20a%20src%20attribute.\">script execution</a> tests with <a href=\"https://jestjs.io/\">Jest</a>. This post will be written with <a href=\"https://www.typescriptlang.org/\">TypeScript</a> code snippets but I hope everything will still be clear if you're using plain JavaScript. Brief summaries of script execution, CLIs, Jest, and typescript are written below.</p>\n<h2>Why This Post Is Written</h2>\n<p>When writing tests for a Command Line Interface (<a href=\"https://en.wikipedia.org/wiki/Command-line_interface\">CLI</a>), I googled for a clear path to writing CLI test in Jest and didn't find much! To some writing CLI tests may be obvious and therefore no pattern needs to be reviewed or copied. Good for you! However, for me at least, I like to be able to read about a common pattern that works and copy that pattern. This makes code and conversations about code easier! This sentiment is turning into a whole other can-of-worms. So how about some code, shall we? That <strong>is</strong> why you're here, I assume.</p>\n<h2>A sample test to copy</h2>\n<pre class=\"language-typescript\"><code class=\"language-typescript code-highlight\"><span class=\"code-line\"><span class=\"token keyword\">import</span> fs <span class=\"token keyword\">from</span> <span class=\"token string\">'fs'</span>\n</span><span class=\"code-line\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> exec <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'child_process'</span>\n</span><span class=\"code-line\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> someScript <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./some-script'</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"token function\">describe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'&#x3C;someScript>'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n</span><span class=\"code-line\">  <span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">'&#x3C;does something>'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span>done<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n</span><span class=\"code-line\">    <span class=\"token keyword\">const</span> script <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token operator\">&#x3C;</span>someScript<span class=\"token operator\">></span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>config<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>dest<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span>\n</span><span class=\"code-line\">    <span class=\"token keyword\">await</span> <span class=\"token function\">exec</span><span class=\"token punctuation\">(</span>script<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n</span><span class=\"code-line\">      <span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> fs<span class=\"token punctuation\">.</span><span class=\"token function\">readdirSync</span><span class=\"token punctuation\">(</span>dest<span class=\"token punctuation\">)</span>\n</span><span class=\"code-line\">      <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toEqual</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&#x3C;</span>actual<span class=\"token operator\">></span><span class=\"token punctuation\">)</span>\n</span><span class=\"code-line\">      <span class=\"token function\">done</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</span><span class=\"code-line\">    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n</span><span class=\"code-line\">  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n</span><span class=\"code-line\"><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n</span></code></pre>\n<p>Now that a copy/paste snippet has been added, I feel better. How about you?</p>\n<h2>Monorepo Utilities</h2>\n<p>Here's the project I'm working <a href=\"\">on</a> which led me to writing this post. <a href=\"\">Monorepo Utilities</a> is group of tools to help developers more easily develop within a monorepo echo system. For each tool, a CLI program is added. I feel these tools can really help developers think less when using Monorepos. Please give the repo a star!</p>\n<h2>Techinary summary</h2>\n<p>Hopeing the summary below clarifies technical terms used in this post!</p>\n<ul>\n<li><strong>Script Execution</strong> is the execution of some code. This when programming is often done in a terminal but scripts can be executed in many other ways!</li>\n<li><strong>Command Line Interface CLI</strong> is an interface which is used to run commands. Commands for the purpose of this post <strong>are</strong> scripts.</li>\n<li><strong>Jest</strong> is popular open source testing library for JavaScript and Typescript.</li>\n<li><strong>TypeScript</strong> is typed version of JavaScript which is used to descriptively describe and support the writing and reading of JavaScript code.</li>\n</ul>\n<p>Hopefully this summary supports you in getting started writing script execution tests using jest! I'm happy to provide more insight if needed!</p>\n<h2>Project Setup</h2>\n<p>In the summary below, how I setup a CLI to be written in TypeScript and tested using Jest is described.</p>\n<h2>Installation</h2>\n<p>First install the necessary dependencies. For my project, I'm using <a href=\"https://github.com/lukeed/sade\">Sade</a> by <a href=\"https://github.com/lukeed\">Luke Edwards</a> for my CLI.</p>\n<h2>Install Commands</h2>\n<pre class=\"language-bash\"><code class=\"language-bash code-highlight\"><span class=\"code-line\"><span class=\"token comment\"># install a new node version, node 14+ hopefully</span>\n</span><span class=\"code-line\">nvm i\n</span><span class=\"code-line\"><span class=\"token comment\"># yarn is expected, npm can be used,</span>\n</span><span class=\"code-line\"><span class=\"token comment\"># install dependencies</span>\n</span><span class=\"code-line\"><span class=\"token function\">yarn</span> <span class=\"token function\">add</span> sade <span class=\"token parameter variable\">-S</span>\n</span><span class=\"code-line\"><span class=\"token comment\"># installl devDependencies</span>\n</span><span class=\"code-line\"><span class=\"token function\">yarn</span> <span class=\"token function\">add</span> ts-node typescript jest ts-jest @types/node @types/jest @types/sade <span class=\"token parameter variable\">-D</span>\n</span></code></pre>\n<h2>Configuration setup</h2>\n<p>The configurations below a generalized for clarity (hopefully)!</p>\n<h2>Package.json</h2>\n<pre class=\"language-json\"><code class=\"language-json code-highlight\"><span class=\"code-line\"><span class=\"token property\">\"bin\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n</span><span class=\"code-line\">  <span class=\"token property\">\"&#x3C;someScript>\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"./dist/index.js\"</span>\n</span><span class=\"code-line\"><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n</span><span class=\"code-line\"><span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n</span><span class=\"code-line\">  <span class=\"token property\">\"build\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"tsc\"</span><span class=\"token punctuation\">,</span>\n</span><span class=\"code-line\">  <span class=\"token property\">\"test\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"jest --maxWorkers=4 --collectCoverage=true --testTimeout=10000\"</span>\n</span><span class=\"code-line\"><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n</span><span class=\"code-line\"><span class=\"token property\">\"jest\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n</span><span class=\"code-line\">  <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"&#x3C;someScript>\"</span><span class=\"token punctuation\">,</span>\n</span><span class=\"code-line\">  <span class=\"token property\">\"projects\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n</span><span class=\"code-line\">    <span class=\"token string\">\"&#x3C;rootDir>/*\"</span>\n</span><span class=\"code-line\">  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n</span><span class=\"code-line\">  <span class=\"token property\">\"resetMocks\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n</span><span class=\"code-line\">  <span class=\"token property\">\"rootDir\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"./\"</span><span class=\"token punctuation\">,</span>\n</span><span class=\"code-line\">  <span class=\"token property\">\"roots\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n</span><span class=\"code-line\">    <span class=\"token string\">\"&#x3C;rootDir>/src\"</span>\n</span><span class=\"code-line\">  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n</span><span class=\"code-line\">  <span class=\"token property\">\"testEnvironment\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"node\"</span><span class=\"token punctuation\">,</span>\n</span><span class=\"code-line\">  <span class=\"token property\">\"transform\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n</span><span class=\"code-line\">    <span class=\"token property\">\"^.+\\\\.(ts)$\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"ts-jest\"</span>\n</span><span class=\"code-line\">  <span class=\"token punctuation\">}</span>\n</span><span class=\"code-line\"><span class=\"token punctuation\">}</span>\n</span></code></pre>\n<h2>Tsconfig.json</h2>\n<pre class=\"language-json\"><code class=\"language-json code-highlight\"><span class=\"code-line\"><span class=\"token punctuation\">{</span>\n</span><span class=\"code-line\">  <span class=\"token property\">\"compilerOptions\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n</span><span class=\"code-line\">    <span class=\"token property\">\"allowJs\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n</span><span class=\"code-line\">    <span class=\"token property\">\"allowSyntheticDefaultImports\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n</span><span class=\"code-line\">    <span class=\"token property\">\"declaration\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n</span><span class=\"code-line\">    <span class=\"token property\">\"esModuleInterop\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n</span><span class=\"code-line\">    <span class=\"token property\">\"checkJs\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n</span><span class=\"code-line\">    <span class=\"token property\">\"lib\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"esnext\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"dom\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"es6\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"dom.iterable\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n</span><span class=\"code-line\">    <span class=\"token property\">\"module\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"commonjs\"</span><span class=\"token punctuation\">,</span>\n</span><span class=\"code-line\">    <span class=\"token property\">\"moduleResolution\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"node\"</span><span class=\"token punctuation\">,</span>\n</span><span class=\"code-line\">    <span class=\"token property\">\"target\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"es6\"</span>\n</span><span class=\"code-line\">  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n</span><span class=\"code-line\">  <span class=\"token property\">\"exclude\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"dist\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"**/*.test.ts\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"packages/*/dist/**\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"*.js\"</span><span class=\"token punctuation\">]</span>\n</span><span class=\"code-line\"><span class=\"token punctuation\">}</span>\n</span></code></pre>\n<h3>Files</h3>\n<p>The files below display a CLI file using Sade and a corresponding test.</p>\n<pre class=\"language-typescript\"><code class=\"language-typescript code-highlight\"><span class=\"code-line\"><span class=\"token comment\">// src/index.ts</span>\n</span><span class=\"code-line\">#<span class=\"token operator\">!</span><span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>bin<span class=\"token operator\">/</span>env node\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"token keyword\">import</span> sade <span class=\"token keyword\">from</span> <span class=\"token string\">'sade'</span>\n</span><span class=\"code-line\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">&#x3C;</span>someScript<span class=\"token operator\">></span> <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./some-script'</span>\n</span><span class=\"code-line\"><span class=\"token keyword\">import</span> pkg <span class=\"token operator\">=</span> <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'../package.json'</span><span class=\"token punctuation\">)</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"token comment\">/**\n</span></span><span class=\"code-line\"><span class=\"token comment\"> * &#x3C;someScript>\n</span></span><span class=\"code-line\"><span class=\"token comment\"> * @description a function\n</span></span><span class=\"code-line\"><span class=\"token comment\"> * --------------------------------\n</span></span><span class=\"code-line\"><span class=\"token comment\"> * @summary function\n</span></span><span class=\"code-line\"><span class=\"token comment\"> * This function does...\n</span></span><span class=\"code-line\"><span class=\"token comment\"> */</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"token keyword\">const</span> prog <span class=\"token operator\">=</span> <span class=\"token function\">sade</span><span class=\"token punctuation\">(</span><span class=\"token string\">'some-script'</span><span class=\"token punctuation\">)</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\">prog\n</span><span class=\"code-line\">  <span class=\"token punctuation\">.</span><span class=\"token function\">version</span><span class=\"token punctuation\">(</span>pkg<span class=\"token punctuation\">.</span>version<span class=\"token punctuation\">)</span>\n</span><span class=\"code-line\">  <span class=\"token punctuation\">.</span><span class=\"token function\">command</span><span class=\"token punctuation\">(</span><span class=\"token string\">'run &#x3C;config> &#x3C;dest>'</span><span class=\"token punctuation\">)</span>\n</span><span class=\"code-line\">  <span class=\"token punctuation\">.</span><span class=\"token function\">describe</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&#x3C;does something\"</span><span class=\"token punctuation\">)</span>\n</span><span class=\"code-line\">  <span class=\"token punctuation\">.</span><span class=\"token function\">example</span><span class=\"token punctuation\">(</span><span class=\"token string\">'run package.json dist'</span><span class=\"token punctuation\">)</span>\n</span><span class=\"code-line\">  <span class=\"token punctuation\">.</span><span class=\"token function\">action</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">,</span> dest<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">installDependencies</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> config<span class=\"token punctuation\">,</span> debug<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> dest<span class=\"token punctuation\">,</span> process <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\">prog<span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>process<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">)</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"token keyword\">export</span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">&#x3C;</span>someScript<span class=\"token operator\">></span> <span class=\"token punctuation\">}</span>\n</span></code></pre>\n<pre class=\"language-typescript\"><code class=\"language-typescript code-highlight\"><span class=\"code-line\"><span class=\"token keyword\">import</span> fs <span class=\"token keyword\">from</span> <span class=\"token string\">'fs'</span>\n</span><span class=\"code-line\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> exec <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'child_process'</span>\n</span><span class=\"code-line\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> someScript <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./some-script'</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"token function\">describe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'&#x3C;someScript>'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n</span><span class=\"code-line\">  <span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">'&#x3C;does something>'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span>done<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n</span><span class=\"code-line\">    <span class=\"token keyword\">const</span> script <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token operator\">&#x3C;</span>someScript<span class=\"token operator\">></span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>config<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>dest<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span>\n</span><span class=\"code-line\">    <span class=\"token keyword\">await</span> <span class=\"token function\">exec</span><span class=\"token punctuation\">(</span>script<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n</span><span class=\"code-line\">      <span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> fs<span class=\"token punctuation\">.</span><span class=\"token function\">readdirSync</span><span class=\"token punctuation\">(</span>dest<span class=\"token punctuation\">)</span>\n</span><span class=\"code-line\">      <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toEqual</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&#x3C;</span>actual<span class=\"token operator\">></span><span class=\"token punctuation\">)</span>\n</span><span class=\"code-line\">      <span class=\"token function\">done</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</span><span class=\"code-line\">    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n</span><span class=\"code-line\">  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n</span><span class=\"code-line\"><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n</span></code></pre>","slug":"jest-exec-test"},"__N_SSG":true}