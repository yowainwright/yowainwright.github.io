{"pageProps":{"frontmatter":{"title":"Javascript for loop & the argument key word","meta":"Javascript for loop & the argument key word defined & why it is misunderstood","categories":["javascript","code"],"date":"December 2, 2014","path":"/js-argument-key-word"},"content":"<p>Today, I was assigned the task of printing logs to the page instead of to the <code>console</code> if there was a certain string appended to the url so that the our Q/A engineer could get that data into his program.</p>\n<p>My task was manageable, but before committing my pull request my boss &#x26; I went over the debug program (called <code>debug.js</code>). The process of describing what's happening in a program I find highly beneficial. As I was talking through the program I noticed the <code>[argument](//developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/arguments)</code> key word.</p>\n<p>The <code>argument</code> key word is an object that stores the arguments passed into a function within the scope of that function.</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript code-highlight\"><span class=\"code-line\"><span class=\"token keyword\">var</span> <span class=\"token function-variable function\">passArguments</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n</span><span class=\"code-line\">  <span class=\"token keyword control-flow\">return</span> <span class=\"token dom variable\">document</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">write</span><span class=\"token punctuation\">(</span>arguments<span class=\"token punctuation\">.</span><span class=\"token property-access\">length</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\"><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\"><span class=\"token function\">passArguments</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\"><span class=\"token comment\">// result: the document prints out 5</span>\n</span></code></pre>\n<p>Live <a href=\"//codepen.io/yowainwright/pen/2f64d380b74302b396927d297828cd3a\">Code</a></p>\n<p>For the program that I was working on today, the program takes the first argument of the function <code>passArguments</code> as stores it in a variable set as category. Then it loops through the other arguments &#x26; strong them in the logs array.</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript code-highlight\"><span class=\"code-line\"><span class=\"token keyword\">var</span> <span class=\"token function-variable function\">passArguments</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n</span><span class=\"code-line\">\t<span class=\"token keyword\">var</span> category <span class=\"token operator\">=</span> arguments<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">\tlogs <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">(</span> arguments<span class=\"token punctuation\">.</span><span class=\"token property-access\">length</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">\t<span class=\"token keyword control-flow\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> j <span class=\"token operator\">=</span> logs<span class=\"token punctuation\">.</span><span class=\"token property-access\">length</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&#x3C;</span> j<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n</span><span class=\"code-line\">\t  logs<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> arguments<span class=\"token punctuation\">[</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">\t<span class=\"token punctuation\">}</span>\n</span><span class=\"code-line\">\t<span class=\"token dom variable\">document</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">write</span><span class=\"token punctuation\">(</span>category <span class=\"token operator\">+</span> <span class=\"token string\">' : '</span> <span class=\"token operator\">+</span> <span class=\"token string\">'['</span> <span class=\"token operator\">+</span> logs <span class=\"token operator\">+</span> <span class=\"token string\">']'</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\"><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\"><span class=\"token function\">passArguments</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Categories'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'2'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'3'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'4'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'5'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span></code></pre>\n<p>Live <a href=\"//codepen.io/yowainwright/pen/6b24e79b8dcd00668619acd396dd4b46\">Code</a></p>\n<p>While my boss &#x26; I were going over the program, he wrote out the code similarly to how a browser compiles it.</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript code-highlight\"><span class=\"code-line\">arguments <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'ga'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'info a'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'info b'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'info c'</span><span class=\"token punctuation\">]</span>\n</span><span class=\"code-line\">arguments <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'ga'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'info a'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'info b'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'info c'</span><span class=\"token punctuation\">]</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\">category <span class=\"token operator\">=</span> <span class=\"token string\">'ga'</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">logs <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span> <span class=\"token punctuation\">,</span> <span class=\"token punctuation\">,</span> <span class=\"token punctuation\">]</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"token keyword control-flow\">for</span> loop\n</span><span class=\"code-line\">start at<span class=\"token operator\">:</span> <span class=\"token number\">0</span>\n</span><span class=\"code-line\">go to<span class=\"token operator\">:</span> <span class=\"token number\">3</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"token keyword control-flow\">for</span> loop <span class=\"token number\">1</span><span class=\"token punctuation\">(</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n</span><span class=\"code-line\">logs<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'info a'</span>\n</span><span class=\"code-line\">logs <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span> <span class=\"token string\">'info a'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">,</span> <span class=\"token punctuation\">]</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"token keyword control-flow\">for</span> loop <span class=\"token number\">2</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n</span><span class=\"code-line\">logs <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span> <span class=\"token string\">'info a'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'info b'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">]</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"token keyword control-flow\">for</span> loop <span class=\"token number\">3</span>\n</span><span class=\"code-line\">logs <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span> <span class=\"token string\">'info a'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'info b'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'info c'</span><span class=\"token punctuation\">]</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\">end <span class=\"token keyword control-flow\">for</span> loop\n</span></code></pre>","slug":"js-argument-key-word"},"__N_SSG":true}