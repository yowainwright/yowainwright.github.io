{"pageProps":{"frontmatter":{"title":"Arrow Function Notes  After Watching ES6 For Everyone","meta":"This post reviews some things about arrow functions that I learned from Wes Bos's ES6 for everyone.","categories":["html","code","note","javascript"],"date":"January 6, 2017","path":"/arrow-functions"},"content":"\nNote post: this short post about Arrow Functions after watching [ES6 For Everyone](https://es6.io/)(EFE——for this post) by [Wes Bos](http://wesbos.com/)! Arrow functions are simpler way to write functions in [JavaScript](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions). This post contains a few things that I wasn't completely clear on about Arrow Functions that EFE really clarified for me.\n\n## Arrow Function Illuminations:\n\n1. `This` will be undefined.\n2. Your can remove even more code cruft that is usually done with Arrow Functions (no mustache brackets needed).\n3. Arguments which are objects will not work in arrow functions\n\n## Deeper Dive\n\nWhen writing a function normal `this` can be bound to things (like elements in example). With arrow functions, _this_ (pun intended) is not the case.\n\n### The This Key Word Is Undefined\n\n**ES5 Function**\n\n```javascript\n\nvar clickFunction = function clickFunc() {\n  console.log(this);\n  // This would be the selected element\n};\nvar button1 = document.getElementById('button-1');\nbutton1.addEventListener('click', clickFunction, false);\n\n```\n\n**ES6 Arrow Function**\n\n```javascript\n\ndocument.getElementById('elem').addEventListener('click', () => {\n  console.log(this);\n  // `this` would be undefined\n});\n\n```\n\n### Remove Even More Cruft With Arrow Functions\n\nArrow functions can be even more minimal but most people add certain things like `mustaches` for legibility.\n\n**Standard Way of Writing an Arrow Function**\n\n```javascript\n\nconst button2 = document.getElementById('button-2');\nbutton2.addEventListener('click', () => {\n  console.log('Normal arrow function');\n});\n\n```\n\n**More Minimal Way An Arrow Function Can Be Written**\n\n```javascript\n\nconst button3 = document.getElementById('button-3');\nbutton3.addEventListener('click', () => console.log('arrow function with less cruft'));\n\n```\n\n### Objects Cannot Be Used In Arrow Function Arguments\n\nArrow functions can use arguments——as long as they're not objects.\n\n**Standard Way of Writing an Arrow Function**\n\n```javascript\n\nconst button4 = document.getElementById('button-4');\nconst anObj = {\n  name: 'Objecto'\n};\nbutton4.addEventListener('click', (anObj) => {\n  console.log(anObj);\n  // anObj will be undefined\n});\n\n```\n\n## Arrow Function Notes Conclusion\n\nPlay with the examples above on [CodePen](http://codepen.io/yowainwright/pen/5e5d740b1388b400fc1cc0717f5a29f8).\n\nWhat the `this` key word will be bound to and how minimal arrow functions can be is well documented. ES6 For Everyone gives clear examples of that make it much clearer though.\n\nThank you [Wes Bos](http://wesbos.com/)!!!\n\n**Update:** After talking with Dan Benson a bit, I discovered even more about arrow functions. These things were covered in Wes Bos's course but I'm even clearer now. [See more](https://jeffry.in/arrow-functions-cont/) examples here.\n"},"__N_SSG":true}