{"pageProps":{"frontmatter":{"title":"The 2000s are no longer a teenager, starting out 2020","meta":"This post summarizes my first days of 2020 with brief reflections on 2019, what I learned which included Functional Programming, TypeScript, nervous system healing and awareness","categories":["update","date"],"date":"January 6, 2020","path":"/2000s-not-a-teenager"},"content":"<blockquote>\n<p>A swell came to Southern California the last days of 2019 giving SoCal Surfers the opportunity to shred into the new year. I was one of them. I surfed Ventura Point and El Porto into the new year. It was a good way to wrap 2019 which in no way went as expected for me.</p>\n</blockquote>\n<hr>\n<p>I started out last year, 2019, focused on becoming better at <a href=\"https://medium.com/javascript-scene/master-the-javascript-interview-what-is-functional-programming-7f218c68b3a0\">Functional Programming</a> and <a href=\"https://en.wikipedia.org/wiki/TypeScript\">Typescript</a> but later changed my focus to art, interpersonal communication, and <a href=\"https://www.brainpickings.org/2016/06/20/the-body-keeps-the-score-van-der-kolk/\">nervous system healing</a> via acupuncture. I couldn’t have imagined the journeys and adventures I had over the course of 2019. Almost nothing I experienced I would have expected even at the very end of 2018.</p>\n<p>In this post, I'm going cover what I anticipated I would learn and then write about what I actually learned, or did.</p>\n<h2>Functional Programming, simplicity and expectations</h2>\n<p>Functional Programming is a way of programming where an expected input always delivers an expected output. Many engineers believe functional programming is easier to understand once its patterns are more understood and it generally easier to test—an expected input should always deliver an expected output.</p>\n<blockquote>\n<p>An expected input always delivers an expected output</p>\n</blockquote>\n<p>To understand more about functional programming, I suggest reading posts by Eric Elliot or looking at <a href=\"https://fr.umio.us/why-ramda/\">Ramda</a>, an open source library full of JavaScript programming utilities written <a href=\"https://ramdajs.com/docs/\">functionally and in TypeScript</a>. <a href=\"https://ericelliottjs.com/\">Eric Elliot</a> offers so much content on the subject of <a href=\"https://medium.com/javascript-scene/composing-software-the-book-f31c77fc3ddc\">functional programming</a>.</p>\n<p>The code below demonstrates a <a href=\"https://en.wikipedia.org/wiki/Linked_list\">linked list</a> in functional form. View a living <a href=\"https://codepen.io/yowainwright/pen/eYmqeWo\">Codepen here</a>.</p>\n<pre class=\"shiki shiki-themes theme-custom-light theme-custom-dark\" style=\"background-color:#f9f9f9;--shiki-dark-bg:#031030;color:#000000;--shiki-dark:#b3d8e5\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#569CD6;--shiki-dark:#569CD6\">const</span><span style=\"color:#E2657E;--shiki-dark:#E2657E\"> link</span><span style=\"color:#E194B5;--shiki-dark:#E194B5\"> =</span><span style=\"color:#000000;--shiki-dark:#B3D8E5\"> </span><span style=\"--shiki-dark:#FFD700;color:#FFD700\">(</span><span style=\"color:#007CF0;--shiki-dark:#007CF0\">tree</span><span style=\"color:#000000;--shiki-dark:#B3D8E5\">, </span><span style=\"color:#007CF0;--shiki-dark:#007CF0\">item</span><span style=\"--shiki-dark:#FFD700;color:#FFD700\">)</span><span style=\"color:#000000;--shiki-dark:#B3D8E5\"> </span><span style=\"color:#569CD6;--shiki-dark:#569CD6\">=</span><span style=\"color:#569CD6;--shiki-dark:#569CD6\">></span><span style=\"color:#000000;--shiki-dark:#B3D8E5\"> </span><span style=\"--shiki-dark:#FFD700;color:#FFD700\">[</span><span style=\"color:#007CF0;--shiki-dark:#007CF0\">item</span><span style=\"color:#000000;--shiki-dark:#B3D8E5\">, </span><span style=\"color:#007CF0;--shiki-dark:#007CF0\">tree</span><span style=\"--shiki-dark:#FFD700;color:#FFD700\">]</span><span style=\"color:#000000;--shiki-dark:#B3D8E5\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#569CD6;--shiki-dark:#569CD6\">const</span><span style=\"color:#E2657E;--shiki-dark:#E2657E\"> items</span><span style=\"color:#E194B5;--shiki-dark:#E194B5\"> =</span><span style=\"color:#000000;--shiki-dark:#B3D8E5\"> </span><span style=\"--shiki-dark:#FFD700;color:#FFD700\">[</span><span style=\"--shiki-dark:#DA70D6;color:#DA70D6\">{</span><span style=\"color:#000000;--shiki-dark:#B3D8E5\"> </span><span style=\"color:#007CF0;--shiki-dark:#007CF0\">a:</span><span style=\"color:#007CF0;--shiki-dark:#007CF0\"> \"a\"</span><span style=\"color:#000000;--shiki-dark:#B3D8E5\"> </span><span style=\"--shiki-dark:#DA70D6;color:#DA70D6\">}</span><span style=\"color:#000000;--shiki-dark:#B3D8E5\">, </span><span style=\"--shiki-dark:#DA70D6;color:#DA70D6\">{</span><span style=\"color:#000000;--shiki-dark:#B3D8E5\"> </span><span style=\"color:#007CF0;--shiki-dark:#007CF0\">b:</span><span style=\"color:#007CF0;--shiki-dark:#007CF0\"> \"b\"</span><span style=\"color:#000000;--shiki-dark:#B3D8E5\"> </span><span style=\"--shiki-dark:#DA70D6;color:#DA70D6\">}</span><span style=\"color:#000000;--shiki-dark:#B3D8E5\">, </span><span style=\"--shiki-dark:#DA70D6;color:#DA70D6\">{</span><span style=\"color:#000000;--shiki-dark:#B3D8E5\"> </span><span style=\"color:#007CF0;--shiki-dark:#007CF0\">c:</span><span style=\"color:#007CF0;--shiki-dark:#007CF0\"> \"c\"</span><span style=\"color:#000000;--shiki-dark:#B3D8E5\"> </span><span style=\"--shiki-dark:#DA70D6;color:#DA70D6\">}</span><span style=\"--shiki-dark:#FFD700;color:#FFD700\">]</span><span style=\"color:#000000;--shiki-dark:#B3D8E5\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#569CD6;--shiki-dark:#569CD6\">const</span><span style=\"color:#E2657E;--shiki-dark:#E2657E\"> linkedList</span><span style=\"color:#E194B5;--shiki-dark:#E194B5\"> =</span><span style=\"color:#007CF0;--shiki-dark:#007CF0\"> items</span><span style=\"color:#000000;--shiki-dark:#B3D8E5\">.</span><span style=\"color:#E2657E;--shiki-dark:#E2657E\">reduceRight</span><span style=\"--shiki-dark:#FFD700;color:#FFD700\">(</span><span style=\"color:#007CF0;--shiki-dark:#007CF0\">link</span><span style=\"color:#000000;--shiki-dark:#B3D8E5\">, </span><span style=\"--shiki-dark:#DA70D6;color:#DA70D6\">[</span><span style=\"--shiki-dark:#DA70D6;color:#DA70D6\">]</span><span style=\"--shiki-dark:#FFD700;color:#FFD700\">)</span><span style=\"color:#000000;--shiki-dark:#B3D8E5\">;</span></span></code></pre>\n<h2>TypeScript, data type checking for JavaScript</h2>\n<p><a href=\"http://www.typescriptlang.org/\">TypeScript</a> is a computer programming language that compiles to <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript\">JavaScript</a>. JavaScript can run anywhere—in a web browser, server, etc but is not safely typed.</p>\n<p>With JavaScript, a function as listed below does not require specific types which means that any type of data can be passed into the function.</p>\n<pre class=\"shiki shiki-themes theme-custom-light theme-custom-dark\" style=\"background-color:#f9f9f9;--shiki-dark-bg:#031030;color:#000000;--shiki-dark:#b3d8e5\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#569CD6;--shiki-dark:#569CD6\">const</span><span style=\"color:#E2657E;--shiki-dark:#E2657E\"> add</span><span style=\"color:#E194B5;--shiki-dark:#E194B5\"> =</span><span style=\"color:#000000;--shiki-dark:#B3D8E5\"> </span><span style=\"--shiki-dark:#FFD700;color:#FFD700\">(</span><span style=\"color:#007CF0;--shiki-dark:#007CF0\">num</span><span style=\"color:#000000;--shiki-dark:#B3D8E5\">, </span><span style=\"color:#007CF0;--shiki-dark:#007CF0\">num2</span><span style=\"--shiki-dark:#FFD700;color:#FFD700\">)</span><span style=\"color:#000000;--shiki-dark:#B3D8E5\"> </span><span style=\"color:#569CD6;--shiki-dark:#569CD6\">=</span><span style=\"color:#569CD6;--shiki-dark:#569CD6\">></span><span style=\"color:#007CF0;--shiki-dark:#007CF0\"> num</span><span style=\"color:#E194B5;--shiki-dark:#E194B5\"> +</span><span style=\"color:#007CF0;--shiki-dark:#007CF0\"> num2</span><span style=\"color:#000000;--shiki-dark:#B3D8E5\">;</span></span></code></pre>\n<p>Which means that it can be invoked with a <code>number</code> data type and <code>string</code> data type as arguments even though the function is meant to be invoked with a <code>number</code> and a <code>number</code>.</p>\n<pre class=\"shiki shiki-themes theme-custom-light theme-custom-dark\" style=\"background-color:#f9f9f9;--shiki-dark-bg:#031030;color:#000000;--shiki-dark:#b3d8e5\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#E2657E;--shiki-dark:#E2657E\">add</span><span style=\"--shiki-dark:rgba(255, 18, 18, 0.8);color:rgba(255, 18, 18, 0.8)\">(</span><span style=\"color:#B5CEA8;--shiki-dark:#B5CEA8\">2</span><span style=\"color:#000000;--shiki-dark:#B3D8E5\">, </span><span style=\"color:#007CF0;--shiki-dark:#007CF0\">'hat</span><span style=\"color:#F44747;--shiki-dark:#F44747\">)</span></span></code></pre>\n<p>With TypeScript, a code editor would catch this potential mistake and the function would be written like so.</p>\n<pre class=\"shiki shiki-themes theme-custom-light theme-custom-dark\" style=\"background-color:#f9f9f9;--shiki-dark-bg:#031030;color:#000000;--shiki-dark:#b3d8e5\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#569CD6;--shiki-dark:#569CD6\">const</span><span style=\"color:#E2657E;--shiki-dark:#E2657E\"> add</span><span style=\"color:#E194B5;--shiki-dark:#E194B5\"> =</span><span style=\"color:#000000;--shiki-dark:#B3D8E5\"> </span><span style=\"--shiki-dark:#FFD700;color:#FFD700\">(</span><span style=\"color:#007CF0;--shiki-dark:#007CF0\">num</span><span style=\"color:#E194B5;--shiki-dark:#E194B5\">:</span><span style=\"color:#E2657E;--shiki-dark:#E2657E\"> number</span><span style=\"color:#000000;--shiki-dark:#B3D8E5\">, </span><span style=\"color:#007CF0;--shiki-dark:#007CF0\">num2</span><span style=\"color:#E194B5;--shiki-dark:#E194B5\">:</span><span style=\"color:#E2657E;--shiki-dark:#E2657E\"> number</span><span style=\"--shiki-dark:#FFD700;color:#FFD700\">)</span><span style=\"color:#E194B5;--shiki-dark:#E194B5\">:</span><span style=\"color:#E2657E;--shiki-dark:#E2657E\"> number</span><span style=\"color:#569CD6;--shiki-dark:#569CD6\"> =</span><span style=\"color:#569CD6;--shiki-dark:#569CD6\">></span><span style=\"color:#007CF0;--shiki-dark:#007CF0\"> num</span><span style=\"color:#E194B5;--shiki-dark:#E194B5\"> +</span><span style=\"color:#007CF0;--shiki-dark:#007CF0\"> num2</span><span style=\"color:#000000;--shiki-dark:#B3D8E5\">;</span></span></code></pre>\n<p>The code, written in TypeScript above basically says the the function requires 2 numbers and returns a number.</p>\n<pre class=\"shiki shiki-themes theme-custom-light theme-custom-dark\" style=\"background-color:#f9f9f9;--shiki-dark-bg:#031030;color:#000000;--shiki-dark:#b3d8e5\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#569CD6;--shiki-dark:#569CD6\">const</span><span style=\"color:#E2657E;--shiki-dark:#E2657E\"> add</span><span style=\"color:#E194B5;--shiki-dark:#E194B5\"> =</span><span style=\"color:#000000;--shiki-dark:#B3D8E5\"> </span><span style=\"--shiki-dark:#FFD700;color:#FFD700\">(</span><span style=\"color:#007CF0;--shiki-dark:#007CF0\">num</span><span style=\"color:#E194B5;--shiki-dark:#E194B5\">:</span><span style=\"color:#E2657E;--shiki-dark:#E2657E\"> number</span><span style=\"color:#000000;--shiki-dark:#B3D8E5\">, </span><span style=\"color:#007CF0;--shiki-dark:#007CF0\">num2</span><span style=\"color:#E194B5;--shiki-dark:#E194B5\">:</span><span style=\"color:#E2657E;--shiki-dark:#E2657E\"> number</span><span style=\"--shiki-dark:#FFD700;color:#FFD700\">)</span><span style=\"color:#E194B5;--shiki-dark:#E194B5\">:</span><span style=\"color:#E2657E;--shiki-dark:#E2657E\"> number</span><span style=\"color:#569CD6;--shiki-dark:#569CD6\"> =</span><span style=\"color:#569CD6;--shiki-dark:#569CD6\">></span><span style=\"color:#007CF0;--shiki-dark:#007CF0\"> num</span><span style=\"color:#E194B5;--shiki-dark:#E194B5\"> +</span><span style=\"color:#007CF0;--shiki-dark:#007CF0\"> num2</span><span style=\"color:#000000;--shiki-dark:#B3D8E5\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#569CD6;--shiki-dark:#569CD6\">const</span><span style=\"color:#E2657E;--shiki-dark:#E2657E\"> addedNumber</span><span style=\"color:#E194B5;--shiki-dark:#E194B5\"> =</span><span style=\"color:#E2657E;--shiki-dark:#E2657E\"> add</span><span style=\"--shiki-dark:#FFD700;color:#FFD700\">(</span><span style=\"color:#B5CEA8;--shiki-dark:#B5CEA8\">2</span><span style=\"color:#000000;--shiki-dark:#B3D8E5\">, </span><span style=\"color:#B5CEA8;--shiki-dark:#B5CEA8\">4</span><span style=\"--shiki-dark:#FFD700;color:#FFD700\">)</span><span style=\"color:#000000;--shiki-dark:#B3D8E5\">; </span><span style=\"color:#6A9955;--shiki-dark:#6A9955\">// 6</span></span>\n<span class=\"line\"><span style=\"color:#569CD6;--shiki-dark:#569CD6\">const</span><span style=\"color:#E2657E;--shiki-dark:#E2657E\"> erroringAddedNumber</span><span style=\"color:#E194B5;--shiki-dark:#E194B5\"> =</span><span style=\"color:#E2657E;--shiki-dark:#E2657E\"> add</span><span style=\"--shiki-dark:#FFD700;color:#FFD700\">(</span><span style=\"color:#B5CEA8;--shiki-dark:#B5CEA8\">2</span><span style=\"color:#000000;--shiki-dark:#B3D8E5\">, </span><span style=\"color:#007CF0;--shiki-dark:#007CF0\">\"4\"</span><span style=\"--shiki-dark:#FFD700;color:#FFD700\">)</span><span style=\"color:#000000;--shiki-dark:#B3D8E5\">; </span><span style=\"color:#6A9955;--shiki-dark:#6A9955\">// TypeScript would catch this within a text editor, and a build</span></span></code></pre>\n<p>If I tried to use the <code>add</code> function above with an number and string as I wrote above with JavaScript, TypeScript would throw an error at build time and within a <a href=\"https://code.visualstudio.com/\">text editor</a>. See the could above for the general idea.</p>\n<h2>After Years of Not Making Any Art, I Started Making Art Again</h2>\n<p>After 2 trips to Kauai in September, a strong desire to draw and paint manifested. I've long had a passion for Art. Making Art again now feels wonderful. It feels great to have the duality of writing software which is very logical while also painting which feels emotional. Painting, for me, comes from feeling versus the consideratation I rely on writing software.</p>\n<p>As I continue through my journey into 2020, I hope to continue to explore art and painting.</p>\n<h2>Interpersonal Communication, The Subtle Art Of The Emotional Presense That Comes From The Body</h2>\n<p>The nuances of human interaction have always been confusing to me. Language and vocal communication are strengths of mine, generally. However, I find my mannerisms in certain conversations or to be awkward. In some respects this awkwardness is part of who I am. However, some of my mannerisms felt tied to something psychical within my body. I felt like I was holding stress in the body. At the beginning of last year, i decided I wanted to work on healing this stress.</p>\n<p>A friend of mine suggested acupunture for helping with stress. This confused me. I thought acupuncture was for psychical ailments, not removing stress! It was a gift to learn I was wrong. Through acupuncture, I feel like my body was able to release stress from my body and get more in tune with it. I did later find a mental health professional to work with</p>\n<p>After my success with acupuncture, I decided to try other forms of body stress relief. I tried Reiki and Symatic Experience Therapy. I found acupuncture to be very healing. I strongly recommend doing things to check in with the body. Making sure I'm aware of stress my body is holding is important for knowing how my body is feeling and how I am feeling.</p>\n<h2>January 2020 onward</h2>\n<p>2019 was not what I expected. I started with one set of goals and ended up learning about completely different things and focusing on completely different things. Transitioning from a tecnical focus to an emotional one caused my mind to feel more at ease and my body to generally feel more relaxed—which has really help me out learning technical things. I couldn't have expected or anticipated how 2019 went for me. I'm curious how 2020 will go. Let's do it.</p>","slug":"2000s-not-a-teenager"},"__N_SSG":true}