{"pageProps":{"frontmatter":{"title":"Javascript's keyword this; THIS is what I'm talking about!","meta":"This post goes into Javascript's keyword this, how it is defined & why it is misunderstood","categories":["javascript","code"],"date":"January 10, 2015","path":"/js-keyword-this"},"content":"<p>The <em><strong>this</strong></em> keyword in Javascript is something that has often confused me, especial which object it is attached to. I've realized trying to explain it a few times that it's difficult to explain.</p>\n<p>The <em>this</em> keyword is a parameter that gets bound to an object. That parameter this is determined by how a function of method is called. It behaves almost exactly like a normal parameter.</p>\n<p>Here’s a list of what the keyword this is <strong>not</strong> bound to:</p>\n<ul>\n<li>the object created literal</li>\n<li>the function object it appears in</li>\n<li>a new function it appears in</li>\n<li>a object that has a function of the property</li>\n<li>the objects execution context</li>\n</ul>\n<p>Key’s to figuring out what the key work This will be bound to</p>\n<ul>\n<li>This gets bound to the object left of the dot (period, ‘.’)</li>\n<li>If the keyword new is used to create a new object This gets bound to that new object</li>\n<li>If there is not dot &#x26; no keyword this will get bound to the global object</li>\n<li>When using the .call() method another argument is passed in &#x26; This takes that value</li>\n</ul>\n<p>The 4 ways this is initiated:</p>\n<ul>\n<li>In a function.</li>\n</ul>\n<pre class=\"language-javascript\"><code class=\"language-javascript code-highlight\"><span class=\"code-line\"><span class=\"token keyword\">function</span> <span class=\"token function\">funcName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</span></code></pre>\n<ul>\n<li>In a method</li>\n</ul>\n<pre class=\"language-javascript\"><code class=\"language-javascript code-highlight\"><span class=\"code-line\"><span class=\"token keyword\">var</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n</span><span class=\"code-line\">     <span class=\"token function-variable function\">funcName</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n</span><span class=\"code-line\"><span class=\"token punctuation\">}</span>\n</span></code></pre>\n<ul>\n<li>As a constructor</li>\n</ul>\n<pre class=\"language-javascript\"><code class=\"language-javascript code-highlight\"><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"token keyword\">function</span> <span class=\"token function\">myFunc</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n</span><span class=\"code-line\">  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">name</span> <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\"><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"token keyword\">var</span> newMyFunc <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">myFunc</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Jeff'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\"><span class=\"token dom variable\">document</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">write</span><span class=\"token punctuation\">(</span>myFunc<span class=\"token punctuation\">.</span><span class=\"token property-access\">name</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">\n</span></code></pre>\n<ul>\n<li>Using <strong>.call();</strong> or <strong>.apply();</strong> methods</li>\n</ul>\n<pre class=\"language-javascript\"><code class=\"language-javascript code-highlight\"><span class=\"code-line\"><span class=\"token keyword\">function</span> <span class=\"token function\">juggle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n</span><span class=\"code-line\">  <span class=\"token keyword\">var</span> result <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">  <span class=\"token keyword control-flow\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> n <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> n <span class=\"token operator\">&#x3C;</span> arguments<span class=\"token punctuation\">.</span><span class=\"token property-access\">length</span><span class=\"token punctuation\">;</span> n<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n</span><span class=\"code-line\">   result <span class=\"token operator\">+=</span> arguments<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">  <span class=\"token punctuation\">}</span>\n</span><span class=\"code-line\">  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">result</span> <span class=\"token operator\">=</span> result<span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\"><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"token keyword\">var</span> ninja1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\"><span class=\"token keyword\">var</span> ninja2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\">juggle<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">apply</span><span class=\"token punctuation\">(</span>ninja1<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">juggle<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">call</span><span class=\"token punctuation\">(</span>ninja2<span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">\n</span></code></pre>\n<p><strong>example:</strong></p>\n<pre class=\"language-javascript\"><code class=\"language-javascript code-highlight\"><span class=\"code-line\"><span class=\"token keyword\">var</span> <span class=\"token function-variable function\">fn</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">one<span class=\"token punctuation\">,</span> two</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n</span><span class=\"code-line\">    <span class=\"token function\">log</span><span class=\"token punctuation\">(</span>one<span class=\"token punctuation\">,</span> two<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\"><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"token keyword\">var</span> r <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n</span><span class=\"code-line\">    g <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n</span><span class=\"code-line\">    b <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\">r<span class=\"token punctuation\">.</span><span class=\"token property-access\">method</span> <span class=\"token operator\">=</span> fn<span class=\"token punctuation\">;</span> <span class=\"token comment\">// This gets bound to r</span>\n</span><span class=\"code-line\">r<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">method</span><span class=\"token punctuation\">(</span>g<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// This gets bound to r</span>\n</span><span class=\"code-line\"><span class=\"token function\">fn</span><span class=\"token punctuation\">(</span>g<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// This gets bound to the global object</span>\n</span><span class=\"code-line\">fn<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">call</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">,</span> g<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// This gets bound to r</span>\n</span></code></pre>\n<p>After looking at the <em>this</em> key word in a bunch of ways, the best way to describe the <em>this</em> parameter is to say that it is a powerful tool to reference the object that your working with. The only thing to make sure of if you're confused about what 'this' is put it in a <code>console.log()</code> so <code>console.log(this);</code>.</p>","slug":"js-keyword-this"},"__N_SSG":true}