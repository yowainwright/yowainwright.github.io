webpackJsonp([44],{"./node_modules/json-loader/index.js!./.cache/json/js-argument-key-word.json":function(n,s){n.exports={data:{site:{siteMetadata:{title:"Jeffry.in",author:"Jeff Wainwright"}},markdownRemark:{id:"/Users/jwainwright/Dropbox/me/git-docs/yowainwright.github.io/src/pages/2014-12-02-js-argument-keyword/index.md absPath of file >>> MarkdownRemark",html:'<p>Today, I was assigned the task of printing logs to the page instead of to the <code>console</code> if there was a certain string appended to the url so that the our Q/A engineer could get that data into his program.</p>\n<p>My task was manageable, but before committing my pull request my boss &#x26; I went over the debug program (called <code>debug.js</code>). The process of describing whatâ€™s happening in a program I find highly beneficial. As I was talking through the program I noticed the <code>[argument](//developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/arguments)</code> key word.</p>\n<p>The <code>argument</code> key word is an object that stores the arguments passed into a function within the scope of that function.</p>\n<div class="gatsby-highlight">\n      <pre class="language-javascript"><code><span class="token keyword">var</span> passArguments <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>arguments<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token function">passArguments</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment" spellcheck="true">// result: the document prints out 5</span>\n</code></pre>\n      </div>\n<p>Live <a href="//codepen.io/yowainwright/pen/2f64d380b74302b396927d297828cd3a">Code</a></p>\n<p>For the program that I was working on today, the program takes the first argument of the function <code>passArguments</code> as stores it in a variable set as category. Then it loops through the other argemuents &#x26; strong them in the logs array.</p>\n<div class="gatsby-highlight">\n      <pre class="language-javascript"><code><span class="token keyword">var</span> passArguments <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\t<span class="token keyword">var</span> category <span class="token operator">=</span> arguments<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\tlogs <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span> arguments<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> j <span class="token operator">=</span> logs<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> j<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\t  logs<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> arguments<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\t<span class="token punctuation">}</span>\n\tdocument<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>category <span class="token operator">+</span> <span class="token string">\' : \'</span> <span class="token operator">+</span> <span class="token string">\'[\'</span> <span class="token operator">+</span> logs <span class="token operator">+</span> <span class="token string">\']\'</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token function">passArguments</span><span class="token punctuation">(</span><span class="token string">\'Categories\'</span><span class="token punctuation">,</span> <span class="token string">\'1\'</span><span class="token punctuation">,</span> <span class="token string">\'2\'</span><span class="token punctuation">,</span> <span class="token string">\'3\'</span><span class="token punctuation">,</span> <span class="token string">\'4\'</span><span class="token punctuation">,</span> <span class="token string">\'5\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre>\n      </div>\n<p>Live <a href="//codepen.io/yowainwright/pen/6b24e79b8dcd00668619acd396dd4b46">Code</a></p>\n<p>While my boss &#x26; I were going over the program, he wrote out the code similarily to how a browser compiles it.</p>\n<div class="gatsby-highlight">\n      <pre class="language-javascript"><code>arguments <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">\'ga\'</span><span class="token punctuation">,</span> <span class="token string">\'info a\'</span><span class="token punctuation">,</span> <span class="token string">\'info b\'</span><span class="token punctuation">,</span> <span class="token string">\'info c\'</span><span class="token punctuation">]</span>\narguments <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">\'ga\'</span><span class="token punctuation">,</span> <span class="token string">\'info a\'</span><span class="token punctuation">,</span> <span class="token string">\'info b\'</span><span class="token punctuation">,</span> <span class="token string">\'info c\'</span><span class="token punctuation">]</span>\n\ncategory <span class="token operator">=</span> <span class="token string">\'ga\'</span><span class="token punctuation">;</span>\nlogs <span class="token operator">=</span> <span class="token punctuation">[</span> <span class="token punctuation">,</span> <span class="token punctuation">,</span> <span class="token punctuation">]</span>\n\n<span class="token keyword">for</span> loop\nstart at<span class="token punctuation">:</span> <span class="token number">0</span>\ngo to<span class="token punctuation">:</span> <span class="token number">3</span>\n\n<span class="token keyword">for</span> loop <span class="token number">1</span><span class="token punctuation">(</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span>\nlogs<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">\'info a\'</span>\nlogs <span class="token operator">=</span> <span class="token punctuation">[</span> <span class="token string">\'info a\'</span><span class="token punctuation">,</span> <span class="token punctuation">,</span> <span class="token punctuation">]</span>\n\n<span class="token keyword">for</span> loop <span class="token number">2</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">)</span>\nlogs <span class="token operator">=</span> <span class="token punctuation">[</span> <span class="token string">\'info a\'</span><span class="token punctuation">,</span> <span class="token string">\'info b\'</span><span class="token punctuation">,</span> <span class="token punctuation">]</span>\n\n<span class="token keyword">for</span> loop <span class="token number">3</span>\nlogs <span class="token operator">=</span> <span class="token punctuation">[</span> <span class="token string">\'info a\'</span><span class="token punctuation">,</span> <span class="token string">\'info b\'</span><span class="token punctuation">,</span> <span class="token string">\'info c\'</span><span class="token punctuation">]</span>\n\nend <span class="token keyword">for</span> loop\n</code></pre>\n      </div>',frontmatter:{title:"Javascript for loop & the argument key word",date:"December 02, 2014"}}},pathContext:{path:"/js-argument-key-word/"}}}});
//# sourceMappingURL=path---js-argument-key-word-1fabbea3e28139f2a3ac.js.map